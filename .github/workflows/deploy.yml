name: Java CI + CD

on:
  push:
    branches: [ "release" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        run: ./gradlew build --exclude-task test

      - name: Upload JAR file
        uses: actions/upload-artifact@v4
        with:
          name: springboot-jar
          path: build/libs/${{ secrets.JAR_NAME }}

  deploy:
    name: Deploy to EC2
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download JAR file from build
        uses: actions/download-artifact@v4
        with:
          name: springboot-jar
          path: .

      - name: Prepare SSH Key
        run: |
          echo "${{ secrets.EC2_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      - name: Check JAR existence
        run: |
          ls -l ${{ secrets.JAR_NAME }}

      - name: Copy JAR to EC2
        run: |
          scp -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.JAR_NAME }} \
            ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:${{ secrets.DEPLOY_PATH }}/app.jar

      - name: Run JAR on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
            pkill -f 'java -jar' || true
            nohup java -jar ${{ secrets.DEPLOY_PATH }}/app.jar > ${{ secrets.DEPLOY_PATH }}/app.log 2>&1 &
          EOF